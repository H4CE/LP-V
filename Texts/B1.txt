import numpy as np
import pandas as pd

df=pd.read_csv(r"/content/HousingData (1).csv")

df.head()

df.isna().sum()

for i in df.columns:
  mean_value=df[i].mean();
  df[i].fillna(mean_value,inplace=True)

df.isna().sum()

df.rename(columns={"MEDV":"PRICE"},inplace=True)

df.head()

from sklearn.model_selection import train_test_split
x=df.drop(columns={"PRICE"})
y=df["PRICE"]
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=43)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

model = Sequential()

model.add(Dense(128, input_shape=(13, ), activation='relu', name='dense_1'))
model.add(Dense(64, activation='relu', name='dense_2'))
model.add(Dense(1, activation='linear', name='dense_output'))

model.compile(optimizer='adam', loss='mse', metrics=['mae'])
model.summary()

history = model.fit(x_train, y_train, epochs=100, validation_split=0.05, verbose = 1)

y_pred = model.predict(x_test)

from sklearn.metrics import mean_absolute_error
mae=mean_absolute_error(y_test,y_pred)
mae

import matplotlib.pyplot as plt
import seaborn as sns

y_pred_flat=y_pred.flatten()

y_test_flat=[]
for i in y_test:
  y_test_flat.append(i)

plt.figure(figsize=(40,10))
sns.lineplot(x=range(len(y_pred)), y=y_pred_flat, color='blue', label='y_pred')
sns.lineplot(x=range(len(y_test)), y=y_test_flat, color='red', label='y_test')
plt.legend()
plt.show()

